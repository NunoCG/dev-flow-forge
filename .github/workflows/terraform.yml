name: "Terraform Workflow"

on:
  push:
    branches: ["main"]
  # pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    # environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Define needed variables
    env:
      TF_WORKING_DIR: ./deployments/terraform/ # Terraform run directory

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.6.0

      # Set the GitHub token as an environment variable
      - name: Set GitHub Token
        run: echo "TF_VAR_github_token=${{ secrets.TF_VAR_GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -auto-approve -input=false \
            -var="repo_name=my-repo-name" \
            -var="repo_description=This is my repo description" \
            -var="TF_VAR_github_token=${{ secrets.TF_VAR_GITHUB_TOKEN }}"

      # Printing the terraform outputs
      - name: Print Outputs
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform output
